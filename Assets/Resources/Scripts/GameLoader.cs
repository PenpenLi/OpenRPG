using Spine.Unity.Modules;
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using UnityEngine;
using UnityEngine.Networking;
using XLua;
using XLuaTest;

public class GameLoader : MonoBehaviour
{
    public GameObject init;
    public string folder;

    // 静态使路径只有一个
    static string luapath;

    public string[] scripts;
    public UnityEngine.Object[] prefabs;

    int count = 0;
    int total = 0;

    static public string Getluapath()
    {
        return luapath;
    }

    bool canReadData = true;

    IEnumerator SendRequestVersion(string path)
    {
        Uri uri = new Uri(path); //Uri 是 System 命名空间下的一个类,注意引用该命名空间
        UnityWebRequest uwr = new UnityWebRequest(uri);        //创建UnityWebRequest对象
        uwr.timeout = 5;
        yield return uwr.SendWebRequest();                     //等待返回请求的信息
        if (uwr.isHttpError || uwr.isNetworkError)             //如果其 请求失败，或是 网络错误
        {
            Debug.LogError(uwr.error); //打印错误原因
        }
        else //请求成功
        {
            Debug.Log("请求成功");
        }
    }

    void Awake()
    {
//#if UNITY_STANDALONE_WIN && !UNITY_EDITOR_WIN
        //luapath = @"https://r5r6ty.github.io/OpenRPG/Assets/StreamingAssets/";
        //StartCoroutine(SendRequestVersion(luapath + "version" + ".txt"));

        //print("wolai");

        //if (Directory.Exists(Application.dataPath + @"\StreamingAssets\") == false)
        //{
        //    Directory.CreateDirectory(Application.dataPath + @"\StreamingAssets\");
        //}

        //string old_ver = "0";
        //FileInfo flinfo = new FileInfo(Application.dataPath + @"\StreamingAssets\" + "version" + ".lua");
        //if (flinfo.Exists)
        //{
        //    old_ver = flinfo.OpenText().ReadToEnd();
        //}

        //if (flinfo.Exists == false || Convert.ToInt32(ver) > Convert.ToInt32(old_ver))
        //{
        //    print("-----------------------------------------------");
        //    print(Convert.ToInt32(ver));
        //    print(Convert.ToInt32(old_ver));
        //    print("-----------------------------------------------");
        //}
        //else
        //{
        //    print("-----------------------------------------------");
        //    print(Convert.ToInt32(ver));
        //    print(Convert.ToInt32(old_ver));
        //    print("-----------------------------------------------");
        //}

//#endif

#if UNITY_EDITOR_WIN || UNITY_STANDALONE_WIN
        luapath = Application.dataPath + "/" + folder + "/";
#else
    luapath = folder + "/";
#endif

        foreach (UnityEngine.Object s in prefabs)
        {
            ObjectManager.Instance.SetO(s.name, s);
        }

        total = scripts.Length;
        foreach (string s in scripts)
        {
            StartCoroutine(ReadData(luapath + s + ".lua"));
        }
    }

    IEnumerator ReadData(string path)
    {
        UnityWebRequest www = UnityWebRequest.Get(path);
        yield return www.SendWebRequest();
        while (www.isDone == false)
        {
            yield return new WaitForEndOfFrame();
        }
        yield return new WaitForSeconds(0.5f);
        string scripts = www.downloadHandler.text;
        string methodName = path.Replace(".lua", "");
        methodName = methodName.Substring(methodName.LastIndexOf(@"/") + 1); // 获得名称
        print(methodName);
        LuaManager.Instance.SetScripts(methodName, scripts); // 下面有介绍

        count++;

        if (count >= total)
        {
            init.SetActive(true);
            //testStart();
            Destroy(gameObject);
        }
    }

    // Start is called before the first frame update
    void Start()
    {
        //Debug.Log("a");
        //print(Base64Decode("AAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQALAAEAAQABAAEAAQABAAMABAAFAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEACQABAAEAAQABAAEAAQADAAUABQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAkAAQABAAEAAQABAAEABAADAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQAJAAEAAQABAAEAAQABAAMAAwABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEACQAJAAIAAQABAAEAAQADAAQAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAsACQACAAIAAgABAAEABAADAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQAKAAkAAQACAAEAAQABAAMABQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEACgABAAEAAQAFAAUAAwAEAAQAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQAAAAAAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAIAAgABAAEAAQABAAIAAQABAAEAAQABAAQABQABAAEAAQAFAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAAABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQACAAEAAQABAAEAAgABAAEAAQABAAEAAQADAAMAAQABAAEAAwABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAAAAQABAAEAAQABAAEAAQABAAEAAQACAAIAAQABAAEAAQABAAIAAQABAAEAAQABAAEAAQABAAEAAQAEAAEAAQADAAMAAQABAAEAAQABAAEAAQACAAEAAQABAAEAAQABAAEAAQAAAAEAAQABAAEAAQABAAEAAQACAAIAAgACAAEAAgABAAEAAQACAAEAAQACAAEAAQABAAsAAQABAAEABAAFAAQAAwABAAIAAQABAAEAAQABAAEAAgACAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAgABAAEAAgACAAIAAQABAAEAAQACAAIAAgABAAEAAQALAAEAAQABAAQABQABAAEAAgABAAIAAQABAAEAAgACAAEAAgABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAMAAwABAAEAAgABAAEAAQABAAEAAgABAAEAAQABAAsACQABAAEAAQADAAEAAQABAAIAAQACAAIAAgABAAIAAQACAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAkACQAFAAEAAQABAAEAAQABAAEAAQACAAEAAQABAAEAAQALAAEAAQABAAEABQABAAEAAQABAAEAAQABAAEAAQACAAIAAQACAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEACwAKAAMABQABAAEAAQABAAEAAQABAAEAAgABAAEAAQABAAEACQABAAEAAQADAAQAAQABAAEAAQABAAEAAQABAAEAAQACAAEAAQACAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAkACwAEAAEAAQABAAEAAQABAAEAAgACAAIAAQABAAEAAQABAAkAAQABAAEABQAEAAMAAQABAAEAAQABAAEAAQABAAIAAgABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAIAAgABAAoABQABAAEAAQABAAEAAQACAAEAAQABAAEAAQABAAEAAQAKAAsAAQABAAQAAQABAAEAAQABAAEAAQABAAEAAQACAAEAAQABAAIAAQABAAEAAQABAAEAAQABAAEAAgABAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAgABAAEAAQABAAEAAQAKAAkAAQADAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQACAAEAAQABAAEAAQABAAEAAQACAAEAAQACAAIAAQABAAEAAQABAAEAAQABAAEAAQACAAIAAQABAAEAAQABAAEAAQAJAAEAAwABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAgABAAEAAQABAAEAAQABAAEAAQACAAEAAQACAAEAAQABAAEAAQABAAEACQABAAEAAQABAAEAAQABAAEAAQABAAEACgABAAMAAQABAAEAAQABAAEAAQALAAsACwABAAEAAQABAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAkAAQABAAEAAQABAAEAAQABAAEAAQABAAsACgADAAsACgALAAkACQALAAkACwALAAsAAQABAAEAAQABAAIAAgABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAkACQAKAAkACgALAAEAAQABAAEAAQABAAEAAQABAAEAAwABAAEAAQABAAEAAQABAAsACgALAAsACQAKAAoACwALAAkACQAJAAsACwABAAEAAQABAAEAAQADAAMAAwAFAAEAAQAJAAkACQAJAAsACQABAAEAAQABAAEAAQABAAEAAQABAAMAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAwAFAAUAAQABAAEAAQAJAAoACgAKAAEAAQABAAEAAQABAAEAAQABAAEAAQADAAEAAQABAAEAAQAFAAQABAAFAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAUAAwADAAEAAQABAAEAAQAJAAoAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAwABAAEAAQABAAEABAAEAAUABQADAAMAAQABAAEAAQACAAIAAgABAAEAAQABAAEAAQABAAEAAQADAAUAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAMAAQABAAEAAQADAAUABQAFAAUAAQABAAEAAQABAAEAAgABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQADAAQAAQABAAUABQAFAAQAAwAFAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAgACAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAwAFAAQAAwADAAUAAwAEAAQABAAEAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAIAAQABAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAMAAwAEAAQABQAEAAQAAwADAAUABQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQADAAMAAwAFAAMAAwAFAAQABAADAAMAAQABAAEAAQABAAEAAQABAAEAAQABAAAAAQABAAEAAQABAAEAAQABAAEAAQACAAIAAQACAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAwADAAMABAADAAQABAAEAAQABAADAAMABQAFAAQABAABAAEAAQADAAQAAQAAAAEAAQABAAEAAQABAAEAAQABAAIAAQACAAEAAQABAAEAAQABAAEAAQAFAAMAAQABAAEAAQADAAMAAwADAAMAAwAFAAUAAwAFAAMABAADAAUABAADAAUABAAEAAUAAwAEAAQAAAAAAAEAAQABAAEAAQABAAEAAQABAAEAAQADAAUAAwAFAAMAAwAEAAMAAwAEAAUAAwADAAMAAwADAAUABQAEAAMABQAEAAMAAwAFAAMABAAEAAQABQAEAAUABQADAAMABQAFAAAAAAABAAEAAQABAAEAAQABAAEABAAEAAMAAwABAAEAAQABAAEAAQABAAEAAwADAAMAAQADAAMABQADAAMABAAEAAUABQAEAAMAAwAEAAMABAAEAAUABQAEAAQAAwADAAQABAAAAAAAAQABAAEAAQABAAEAAQADAAMAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAMABAADAAMABQAEAAQABQAEAAQAAwADAAMABQADAAUABAADAAMABQAFAAUAAAAAAAAAAAAAAAAAAAAAAAUABQAEAAUABQAEAAEAAQABAAEAAQACAAEAAQABAAEAAQABAAEAAQADAAQABQADAAMAAwAFAAQABAADAAQABQAFAAMABAAEAAQABQAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAEAAQABAAEAAQACAAIAAgABAAEAAgABAAMAAwADAAUAAwADAAUAAwADAAMABQAEAAMABQAEAAMAAwADAAMABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAIAAgACAAIAAQADAAUAAwAEAAQABQADAAMAAwADAAQABQADAAUABAAFAAUABAAEAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQACAAEABAAEAAMAAwADAAQAAwAEAAMABQADAAUABQAFAAUABAAEAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAEAAQABAAEAAQACAAIAAQABAAEAAQABAAUABQADAAUABAADAAMABAADAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAABQAFAAQABQAFAAEAAQABAAEAAQABAAEAAQACAAIAAQABAAEAAQAEAAQAAwAEAAMAAwADAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAQABQAFAAMABQADAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEABAAEAAQABQADAAMAAw
        //print(Base64Decode("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAmACEAAAAmACMAIgAAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAiAAAAAAAjACEAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAAhACIAIgAAACUAIgAhACMAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAACYAJwAiACMAAAAAACMAIwAAACIAIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAC0AIwAAACIAIwAiAAAAAAAhACEAIwAjACIAAAAAACMAAAAAAMIAwgDCAMIAwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAAhAAAAIQAhACYAIgAAAAAALQAiACMAAAAAAAAAAAAhAC0AIgAmAAAAAAAAAAAAAAAeAB4AHgAeAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAJgAjADIAAAAtAAAAJgAjACEAIwAjAAAAAAAnAAAAIgAAAAAAAAAAAAAAIQAjACYAAAAjAAAAAAAAACEAAAAhACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjACYAIgAAAAAALQAAACIAIQAjACEAIwAhACIAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAIwAiAAAAAAAjAAAAAAAAAAAAAAAiACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAyACEAAAAiACMAIgAtACEAAAAhAC0AAAAiACEAIgAiAAAAJgAAAAAAIwAAAAAAMQAAAAAAAAAhAC0AIwAhAAAAAAAmAAAAAAAjACMAAAAiACEAAAAAAAAAAAAAAAAAAAAAACIAAAAhAAAAIQAhACIAIgAiACEAIQAAACEAAAAiACIAMQAAAAAAAAAAACEAKgAAAAAAJwAAAAAAMQAAACEAIQAmACIAAAAhAAAAAAAiACEAAAAjAAAAAAAAAAAAIwAjAAAAIwAAACMAIQAtACIAIQAiACEAIQAAACEAIQAhACoAIQAjAAAAAAAAAAAAAAAAACEAAAAAAAAAKgAjACEAAAAAACMAIQAAACkAIgAAACYAAAAiAAAAIwAAAAAAAAAAAAAAIQAAACYAIQAjACMAIgAiACIAIQAhACEAAAAnAEcAAAAjACEAJwAAAAAAMgAAAAAAAAAnAAAAAAAhACMAIgAAACEAAAAAACIAIgAmAAAAAAAAAAAAIQAjAAAAIwAAAAAAAAAAACkAIQAhACEAIQAhAAAAAAAhAAAAIQAAAAAAAAAAACMAIQAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgAiACEAJAAiACIAIgAAACEAAAAiACEAIgAAACEAIQAAACMAAAAAAAAAIwAAAC0AIgAiAAAAAAAAACEAAAAAAAAAAAAAAAAAAAAjACEAswAAADMAAAAAAC0AAAAAADEAAAAiACIAIwAkAAAAAAAkAAAAIgAjACMAAAAjAAAAJgAAACIAAAAjAAAAAAAjAAAAIQAAACIAKAA1AAAAAAA0AAAAIwAjACcAYQBiACMAIQAiALMAAAAAAAAAAAAoAAAAAAAAAAAAIgAjACQAAAAAACQAAAAkACQAAAAjAAAAJgAhACEAAAAAAAAAAAAAAAAAAAAiACYAIQAiAAAACAEJAQoBAAAhACEAIwAjACIAIQAhAAAAIgCzAAAAAAAAAAAAJgAAAEcAAAA2AAAAIwAkAAAAAAAAAPQAJAAkACMAIwAAACEAAAAtAAAAIQAAACMAAAAAACIAIQAAAAAAIQAjAAAAAAAlACIAIgAAAAAAIgAhAAAAAAAAAAAAswAAAAAAAAAAAAAAAAAAAAAAAAAjACQAAAAAAAAAAAAEAS0AAAAiACIAAAAAACIAAAAAACIALQAAAAAAJgAAAAAAIwAAACEAIgAAADQAIQAjACEAAAAAAAAAAAAAAAAAIgAAALMAAAAAAC0AAAAAAAAAAAAAAAAAJwAAAAAAAAAAAAAA8QDyAPMAJAAjACYAJgAiACEAJgAyAAAAIQAAAAAAAAAjACIAIQAmACMAAAAnACMAIwAAAAAAAAAAAAAARwAjACMAKQCzAAAAAABhAGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAgEDAXUAAAAjAAAAAAAAACMALQAAAAAAAAAAAAAAAAAmAAAAIwAhAAAAAADCAMIAAAAiAAAANQAAAAAAAAAAAAAAswA3AAAAAABjAGQAAAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBAAAAIgAAACMAIwAAACEAAAArACMAAAAAACIAAAAiAAAAIwAiACIAHAAeAMEAwgDDADUAwQDCAMIAwgDCAMMAAAAnAAAAAAAAAAAAAAATAAAAAAAAAAAAAAAAAAAAAAAFAQAAkQByAJIAAAAAACIAIwAAACIAIwAAAAAAAAAAACEAMgAhAAAAJgAhACEAAAAcABoAGwAAABkAGgAaAB0AHgAeAAAAAAAAACYAAAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUAAAAtAAAAAAAAAAAAAAA3AAAAAAAAAAAAAAAhAAAAAAAjAAAAAAAmAC0AAAAiACIAAAAAAAAAIQAAAAAAAAA1AAAAAAAAAAAAKAAAACYAAAAAADIAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAACYAKAAlACEAIwAtACIAAAAhAAAAAAAAACEAKQAAAAAAAAAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAC4AAAAAADQAAAAAACUAAAAAAAAAAAAAAAAAAAAlAAAAAAAjACMAIwAAADIAAAAAAAAAAAAAAC0AJgAAAAAAIQAjAAAAAAAiACEALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAAAAAuAAAAAAAAAAAAAAAAAAAAJgAAAAAAKAAmACIAIQAiACMAJgAAAAAAAAAAAAAAIQAmAC0AIwAAAC0AIwAAAAAAAAAiAAAAAAAAAAAAAAAAAAAAAAAAADcAAAAAAAAANAAAAAAAAAAuAAAAAAAAADYAAAAAACkAAAAAAAAAJQAiAAAAJgAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAjACMAAAAmAAAAIgAhACEAAAAxAAAAJgBhAGIAAAAAAAAAAAAmAC4AAAAAAAAAAAAAAAAAAAAAADYAAAAAAAAAKAAlACYAJwAjAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAjAAAAIgAjAAAAAAAjACMAIgA3ACEAIwAjACIAIwAhAGEAYgAhAAAAAAAuAAAAAAAAADYAAAAAAAAAAAAAAAAAAAAhACMAJQAAACYAAAAAACIAAAAAAAAAAAAAAAAAAAAAACEAAAAyAAAAIwAjAAAAAAAAAAAAAAAAACEAAAAAAAAAAAAAACMAIgAiACkANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAlAAAAAAAAAAAAJgAAAAAAAAAAAAAAAAAAAAAAJgAAAAAAIwAhACMAIwAjACMAAAAjACIAAAAAAGEAYgAAACYAAAAAAAAAAAAAAC4AAAAAADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAIQAmACIAAAAiACIAIQAAACIAAAAAAAAAAAAAAAAAAABhAGIALgAAADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAhAAAAAAAAAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAACIALQBjAGQAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEALgAmADEAIgAiAAAAAAAAAAAAAAAAACgANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiAAAAAAAAAC0AIgAtAAAAAAAjACIAIQAAAAAAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAjAAAALgAiACMAJgAAACEAIwAjACEAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAIgAAAC0AAAAjACMAAAAyADEAIgAtAAAAIwAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAhACYAAAAuACIAAAAjACMAAAAmACEAAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAAtAC4AAAAxACIAAAAjACMALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAACMAAAAjACYAAAAtAAAAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAi
        //print(Base64DecodegABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAEAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAAAAAAAAAAAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAEAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAQAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwABAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAEAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAQACAAIAAgACAAIAAgACAAIAAgACAAIAAgABAAEAAQABAAEAAQACAAIAAgACAAIAAgACAAIAAgACAAIAAgABAAEAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwABAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAEAAQABAAEAAQABAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAEAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAQAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwABAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAEAAQABAAEAAQAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAACAAIAAgACAAIAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAQABAAEAAQABAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQA="));
        //print(Base64Decode("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg
        //print(Base64Decode("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUVFRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUVFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=="));
    }

    // Update is called once per frame
    void Update()
    {

    }

    //public string Base64Decode(string str)
    //{
    //    byte[] bytes = System.Convert.FromBase64String(str);
    //    print(bytes.Length);
    //    byte[] n = new byte[bytes.Length / 2];
    //    for (int i = 0; i < bytes.Length; i += 2)
    //    {
    //        print(bytes[i] + "," + bytes[i + 1]);
    //        n[i / 2] = bytes[i];
    //    }
    //    print(System.Convert.ToBase64String(n));
    //    return System.Text.Encoding.Default.GetString(bytes);
    //}
}

public class LuaManager
{ // 单例，因为我们需要保证场景中只有一个实例

    private static LuaManager instance;
    public static LuaManager Instance
    {
        get
        {
            if (instance == null)
                instance = new LuaManager();
            return instance;
        }
    }

    public Dictionary<string, string> luaScripts; // 保存脚本信息

    private LuaManager()
    { // 初始化
        luaScripts = new Dictionary<string, string>();
    }

    public string GetScripts(string methodName) // 获取脚本
    {
        if (!luaScripts.ContainsKey(methodName))
            return null;
        return luaScripts[methodName];
    }

    public void SetScripts(string methodName, string scripts) // 设置脚本，就是加载AB包额时候用到的
    {
        if (luaScripts.ContainsKey(methodName))
        {
            luaScripts[methodName] = scripts;
        }
        else
        {
            luaScripts.Add(methodName, scripts);
        }
    }

    public static string RetType(object o) // 通过反射获取自己的类名，我们的类想要取出Lua脚本就必须要知道自己的类名
    {
        System.Diagnostics.StackTrace trace = new System.Diagnostics.StackTrace();
        System.Diagnostics.StackFrame frame = trace.GetFrame(1);
        MethodBase method = frame.GetMethod();
        string className = method.ReflectedType.Name;
        return className;
    }
}

public class ObjectManager
{
    private static ObjectManager instance;
    public static ObjectManager Instance
    {
        get
        {
            if (instance == null)
                instance = new ObjectManager();
            return instance;
        }
    }

    public Dictionary<string, UnityEngine.Object> Os; // 保存GO信息

    private ObjectManager()
    { // 初始化
        Os = new Dictionary<string, UnityEngine.Object>();
    }

    public UnityEngine.Object GetO(string name) // 获取脚本
    {
        if (!Os.ContainsKey(name))
            return null;
        return Os[name];
    }

    public void SetO(string name, UnityEngine.Object go) // 设置脚本，就是加载AB包额时候用到的
    {
        if (Os.ContainsKey(name))
        {
            Os[name] = go;
        }
        else
        {
            Os.Add(name, go);
        }
    }
}

public class Tools
{
    private Collider[] colliders = new Collider[5];

    private static Tools instance;
    public static Tools Instance
    {
        get
        {
            if (instance == null)
                instance = new Tools();
            return instance;
        }
    }

    private Tools()
    {

    }

    public bool IsNull(GameObject go)
    {
        return go == null;
    }

    public int RandomRangeInt(int a, int b)
    {
        return UnityEngine.Random.Range(a, b);
    }

    public float RandomRangeFloat(float a, float b)
    {
        return UnityEngine.Random.Range(a, b);
    }

    public Color ColorTryParseHtmlString(string hs)
    {
        Color c;
        ColorUtility.TryParseHtmlString(hs, out c);
        return c;
    }

    public RaycastHit2D[] RigidBody2DCastA(Rigidbody2D r2D, Vector2 dr, RaycastHit2D[] r)
    {
        r2D.Cast(dr, r);
        return r;
    }

    public RaycastHit2D[] RigidBody2DCastB(Rigidbody2D r2D, Vector2 dr, ContactFilter2D c, RaycastHit2D[] r)
    {
        r2D.Cast(dr, c, r);
        return r;
    }

    public RaycastHit2D[] RigidBody2DCastC(Rigidbody2D r2D, Vector2 dr, RaycastHit2D[] r, float ds)
    {
        r2D.Cast(dr, r, ds);
        return r;
    }

    public List<RaycastHit2D> RigidBody2DCastD(Rigidbody2D r2D, Vector2 dr, List<RaycastHit2D> r, float ds)
    {
        r2D.Cast(dr, r, ds);
        return r;
    }

    public RaycastHit2D[] RigidBody2DCastE(Rigidbody2D r2D, Vector2 dr, ContactFilter2D c, RaycastHit2D[] r, float ds)
    {
        r2D.Cast(dr, c, r, ds);
        return r;
    }

    public List<RaycastHit2D> RigidBody2DCastF(Rigidbody2D r2D, Vector2 dr, ContactFilter2D c, List<RaycastHit2D> r, float ds)
    {
        r2D.Cast(dr, c, r, ds);
        return r;
    }

    public RaycastHit[] PhysicsRaycastAll(Vector3 p, Vector3 dir, float dis, int m)
    {
        return Physics.RaycastAll(p, dir, dis, m);
    }

    public RaycastHit PhysicsRaycast(Vector3 p, Vector3 dir, float dis, int m)
    {
        RaycastHit hitInfo;
        Physics.Raycast(p, dir, out hitInfo, dis, m);
        return hitInfo;
    }

    public Collider[] PhysicsOverlapBoxNonAlloc(Vector3 center, Vector3 halfExtents, Quaternion orientation, int mask)
    {
        Physics.OverlapBoxNonAlloc(center, halfExtents, colliders, orientation, mask);
        return colliders;
    }

    public RaycastHit PhysicsBoxCastG(Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, float maxDistance)
    {
        RaycastHit hitInfo;
        bool r = Physics.BoxCast(center, halfExtents, direction, out hitInfo, orientation, maxDistance);
        Debug.Log(r);
        return hitInfo;
    }

    public RaycastHit[] PhysicsBoxCastAllC(Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, float maxDistance)
    {
        return Physics.BoxCastAll(center, halfExtents, direction, orientation, maxDistance);
    }

    public Collider2D[] RigidBody2DOverlapColliderA(Rigidbody2D r2D, ContactFilter2D c, Collider2D[] r)
    {
        r2D.OverlapCollider(c, r);
        return r;
    }

    public List<Collider2D> RigidBody2DOverlapColliderB(Rigidbody2D r2D, ContactFilter2D c, List<Collider2D> r)
    {
        r2D.OverlapCollider(c, r);
        return r;
    }

    public List<Collider2D> Collider2DOverlapCollider(BoxCollider2D bc2D, ContactFilter2D cf2D)
    {
        List<Collider2D> r = new List<Collider2D>();
        bc2D.OverlapCollider(cf2D, r);
        return r;
    }

    public AnimationState GetAnimationState(Animation ani, string name)
    {
        return ani[name];
    }
}

public class LuaUtil
{
    private static Dictionary<int, GameObject> m_gameObjects = new Dictionary<int, GameObject>();
    private static Dictionary<int, Rigidbody> m_rigidbodys = new Dictionary<int, Rigidbody>();
    private static Dictionary<int, Collider> m_colliders = new Dictionary<int, Collider>();

    private static RaycastHit[] m_RaycastHits = new RaycastHit[5];

    public static void AddGameObjectID(int id, GameObject go)
    {
        m_gameObjects.Add(id, go);
    }

    public static void RemoveGameObjectID(int id)
    {
        m_gameObjects.Remove(id);
    }

    public static void AddColliderID(int id, Collider go)
    {
        m_colliders.Add(id, go);
    }

    public static void RemoveColliderID(int id)
    {
        m_colliders.Remove(id);
    }

    public static void SetPos(int id, float x, float y, float z)
    {
        m_gameObjects[id].transform.position = new Vector3(x, y, z);
    }

    public static void GetPos(int id, out float x, out float y, out float z)
    {
        Vector3 pos = m_gameObjects[id].transform.position;
        x = pos.x;
        y = pos.y;
        z = pos.z;
    }

    public static void SetLocalPos(int id, float x, float y, float z)
    {
        m_gameObjects[id].transform.localPosition = new Vector3(x, y, z);
    }

    public static void GetLocalPos(int id, out float x, out float y, out float z)
    {
        Vector3 pos = m_gameObjects[id].transform.localPosition;
        x = pos.x;
        y = pos.y;
        z = pos.z;
    }

    public static void SetlocalScale(int id, float x, float y, float z)
    {
        m_gameObjects[id].transform.localScale = new Vector3(x, y, z);
    }

    public static void SetRotationByEuler(int id, float x, float y, float z)
    {
        m_gameObjects[id].transform.rotation = Quaternion.Euler(x, y, z);
    }

    public static void SetLocalRotationByEuler(int id, float x, float y, float z)
    {
        m_gameObjects[id].transform.localRotation = Quaternion.Euler(x, y, z);
    }

    public static void GetEulerAngles(int id, out float x, out float y, out float z)
    {
        Vector3 pos = m_gameObjects[id].transform.eulerAngles;
        x = pos.x;
        y = pos.y;
        z = pos.z;
    }

    public static void SetRotation(int id, float x, float y, float z, float w)
    {
        m_gameObjects[id].transform.rotation = new Quaternion(x, y, z, w);
    }

    public static void GetRotation(int id, out float x, out float y, out float z, out float w)
    {
        Quaternion quaternion = m_gameObjects[id].transform.rotation;
        x = quaternion.x;
        y = quaternion.y;
        z = quaternion.z;
        w = quaternion.w;
    }

    public static void RigidbodyMovePosition(Rigidbody rigidbody, float x, float y, float z)
    {
        rigidbody.MovePosition(new Vector3(rigidbody.position.x + x, rigidbody.position.y + y, rigidbody.position.z + z));
    }

    public static void RigidbodyGetPosition(Rigidbody rigidbody, out float x, out float y, out float z)
    {
        Vector3 pos = rigidbody.position;
        x = pos.x;
        y = pos.y;
        z = pos.z;
    }

    public static void RigidbodySweepTest(Rigidbody rigidbody, float dx, float dy, float dz, float dis, out RaycastHit hit)
    {
        rigidbody.SweepTest(new Vector3(dx, dy, dz), out hit, dis);
    }

    public static void RigidbodyClosestPointOnBounds(Rigidbody rigidbody, float px, float py, float pz, out float x, out float y, out float z)
    {
        Vector3 pos = rigidbody.ClosestPointOnBounds(new Vector3(px, py, pz));
        x = pos.x;
        y = pos.y;
        z = pos.z;
    }

    public static void RaycastHitGetPoint(RaycastHit hit, out float x, out float y, out float z)
    {
        Vector3 p = hit.point;
        x = p.x;
        y = p.y;
        z = p.z;
    }

    public static void RaycastHitGetNormal(RaycastHit hit, out float x, out float y, out float z)
    {
        Vector3 p = hit.normal;
        x = p.x;
        y = p.y;
        z = p.z;
    }

    public static void Vector3Reflect(float dx, float dy, float dz, float nx, float ny, float nz, out float x, out float y, out float z)
    {
        Vector3 p = Vector3.Reflect(new Vector3(dx, dy, dz), new Vector3(nx, ny, nz));
        x = p.x;
        y = p.y;
        z = p.z;
    }

    public static RaycastHit[] PhysicsBoxCastNonAlloc(Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, float maxDistance, int mask)
    {
        Physics.BoxCastNonAlloc(center, halfExtents, direction, m_RaycastHits, orientation, maxDistance, mask);
        return m_RaycastHits;
    }

    public static Collider[] PhysicsOverlapBox(float cx, float cy, float cz, float ex, float ey, float ez, float rx, float ry, float rz, float rw, int mask, QueryTriggerInteraction q)
    {
        return Physics.OverlapBox(new Vector3(cx, cy, cz), new Vector3(ex, ey, ez), new Quaternion(rx, ry, rz, rw), mask, q);
    }

    public static RaycastHit[] PhysicsRaycastAll(float ox, float oy, float oz, float dx, float dy, float dz, float dis, int m)
    {
        return Physics.RaycastAll(new Vector3(ox, oy, oz), new Vector3(dx, dy, dz), dis, m);
    }

    public static void PhysicsRaycast(float ox, float oy, float oz, float dx, float dy, float dz, float dis, int m, out RaycastHit hit)
    {
        Physics.Raycast(new Vector3(ox, oy, oz), new Vector3(dx, dy, dz), out hit, dis, m);
    }

    public static void GetColliderBoundsCenter(int id, out float x, out float y, out float z)
    {
        Vector3 center = m_colliders[id].bounds.center;
        x = center.x;
        y = center.y;
        z = center.z;
    }

    public static void GetColliderBoundsExtents(int id, out float x, out float y, out float z)
    {
        Vector3 extents = m_colliders[id].bounds.extents;
        x = extents.x;
        y = extents.y;
        z = extents.z;
    }

    public static void GetPhysicsGravity(out float x, out float y, out float z)
    {
        Vector3 g = Physics.gravity;
        x = g.x;
        y = g.y;
        z = g.z;
    }

    public static void QuaternionAngleAxis(float r, float vx, float vy, float vz, out float x, out float y, out float z, out float w)
    {
        Quaternion quaternion = Quaternion.AngleAxis(r, new Vector3(vx, vy, vz));
        x = quaternion.x;
        y = quaternion.y;
        z = quaternion.z;
        w = quaternion.w;
    }

    public static void QuaternionMultiplyVector3(float qx, float qy, float qz, float qw, float vx, float vy, float vz, out float x, out float y, out float z)
    {
        Vector3 vector3 = new Quaternion(qx, qy, qz, qw) * new Vector3(vx, vy, vz);
        x = vector3.x;
        y = vector3.y;
        z = vector3.z;
    }

    public static void QuaternionMultiplyQuaternion(float lqx, float lqy, float lqz, float lqw, float rqx, float rqy, float rqz, float rqw, out float x, out float y, out float z, out float w)
    {
        Quaternion quaternion = new Quaternion(lqx, lqy, lqz, lqw) * new Quaternion(rqx, rqy, rqz, rqw);
        x = quaternion.x;
        y = quaternion.y;
        z = quaternion.z;
        w = quaternion.w;
    }

    public static void DrawLine(float sx, float sy, float sz, float ex, float ey, float ez, float r, float g, float b, float a)
    {
        Debug.DrawLine(new Vector3(sx, sy, sz), new Vector3(ex, ey, ez), new Color(r, g, b, a));
    }

    public static XLua.LuaTable AddLuaComponent(GameObject go, string m)//XLua.LuaTable tableClass
    {
        LuaComponent cmp = go.AddComponent<LuaComponent>();

        cmp.scriptEnv = LuaBehaviour.luaEnv.NewTable();

        // 为每个脚本设置一个独立的环境，可一定程度上防止脚本间全局变量、函数冲突
        LuaTable meta = LuaBehaviour.luaEnv.NewTable();
        meta.Set("__index", LuaBehaviour.luaEnv.Global);
        cmp.scriptEnv.SetMetaTable(meta);
        meta.Dispose();

        cmp.scriptEnv.Set("self", go);

        string scripts = LuaManager.Instance.GetScripts(m);
        LuaBehaviour.luaEnv.DoString(scripts, m, cmp.scriptEnv);

        //cmp.scriptEnv.Get("start", out cmp.luaStart);
        cmp.scriptEnv.Get("update", out cmp.luaUpdate);
        //scriptEnv.Get("lateupdate", out luaLateUpdate);
        cmp.scriptEnv.Get("fixedupdate", out cmp.luaFixedUpdate);
        cmp.scriptEnv.Get("ondestroy", out cmp.luaOnDestroy);

        return cmp.scriptEnv;
    }

    //public static XLuaTest.LuaComponent AddLuaComponent(GameObject go, XLua.LuaTable tableClass)//
    //{
    //    XLuaTest.LuaComponent cmp = go.AddComponent<XLuaTest.LuaComponent>();
    //    cmp.scriptEnv = tableClass;
    //    return cmp;
    //}

    //public static int BDYFixedUpdate(BoxCollider bc, int mask, float x, float y, float z, int id)
    //{
    //    Vector3 velocity = new Vector3(x, y, z);
    //    int isGround = -1;

    //    Physics.BoxCastNonAlloc(bc.bounds.center, bc.bounds.extents, velocity.normalized, m_RaycastHits, bc.attachedRigidbody.rotation, velocity.magnitude, mask);

    //    Vector3 finalOffset = new Vector3(x, y, z);
    //    foreach (RaycastHit h in m_RaycastHits)
    //    {

    //    }

    //    mObjs2[id].position = mObjs2[id].position + finalOffset;
    //    return isGround;
    //}

    public static Vector3 TestMove(BoxCollider lhs, RaycastHit hit, bool up, bool down, bool left, bool right, bool above, bool under, float f_x, float f_z, float f_y, float v_x, float v_z, float v_y, out int isGround)
    {
        isGround = -1;
        if (up || down || left || right || above || under)
        {
            Vector3 c = lhs.bounds.center + new Vector3(v_x, v_y, v_z) * hit.distance - hit.collider.bounds.center;

            Vector3 r = lhs.bounds.extents + hit.collider.bounds.extents;

            Vector3 xxx = r - new Vector3(Mathf.Abs(c.x), Mathf.Abs(c.y), Mathf.Abs(c.z));

            float offset_x;
            float offset_z;
            float offset_y;

            if (v_x > 0)
                offset_x = v_x - xxx.x;
            else
                offset_x = v_x + xxx.x;
            if (v_z > 0)
                offset_z = v_z - xxx.z;
            else
                offset_z = v_z + xxx.z;
            if (v_y > 0)
                offset_y = v_y - xxx.y;
            else
                offset_y = v_y + xxx.y;

            if (xxx.y >= 0)
            {
                isGround = 0;
            }

            if (left || right)
            {
                if (v_x > 0)
                {
                    if (offset_x < f_x)
                        f_x = offset_x;
                }
                else
                {
                    if (offset_x > f_x)
                        f_x = offset_x;
                }
            }

            if (up || down)
            {
                if (v_z > 0)
                {
                    if (offset_z < f_z)
                        f_z = offset_z;
                }
                else
                {
                    if (offset_z > f_z)
                        f_z = offset_z;
                }
            }

            if (above || under)
            {
                if (v_y > 0)
                {
                    if (offset_y < f_y)
                        f_y = offset_y;
                }
                else
                {
                    if (offset_y > f_y)
                        f_y = offset_y;
                }
            }
        }
        return new Vector3(f_x, f_y, f_z);
    }
}